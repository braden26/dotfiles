
"""" Current Settings
filetype plugin on					" Syntax Highlighting
syntax on
let g:powerline_pycmd="py3"			" Powerline

"" number							" Show Line number
set nu

"" wildmenu							" Wild menu
set wmnu							" When on, commandline completion operates
									" in an enhanced mode. When pressing
									" wildchar, defualt tab, for completion,
									" possible matches are shown above command
									" line 

"" laststatus						" Changes when last window has status line
set ls=2							" 0: never
									" 1: only if there are at least 2 windows
									" 2: always

"" lazyredraw						" Only refreshes screen when necessary
set lz								" Screen is not redrawn while exuting macros, registers,
									" or commands that have not been typed.

"" mouse							" Allows mouse usage in different modes
set mouse=a							" Different modes:
									" n Normal mode
									" v Visual mode
									" i Insert mode
									" c Command-line
									" h all previous when editing a help file
									" a all previous
									" r for |hit-enter| and |more-prompt| prompt
									" Little reason not to use a for all modes

"" autoread							" refreshes file if changed
set ar

"" wrap								" wraps lines
set	wrap							"
"" wrapmargin						" Number of char form right border where 
"set wm								" wrapping begins. When typing beyond this
									" limit, end of line 
"" wrapscan							"
set ws								"

"" visualbell						" blink on error
set vb								

"" ruler							" line and column number on right of statusline
set	ru								

"" hidden							" allows for hidden buffers instead of
									" closing them
set hid								

"" bufhidden						" option specifies what happens when a
									" buffer is no longer in window
set bh=hide							" <empty> - global hidden option
									" hide - hides the buffer, not unloading
									"		 it
									" unload - unload the buffer
									" delete - delete buffer from buffer list
									" wipe - wipe out the buffer from buffer
									"		 list
									" unload, delete, wipe change a buffer
									" without warning, use with caution

"" ttyfast							" Fast rendering terminal
set	tf								

"" showmode							" show INSERT, REPLACE, VISUAL modes in statusbar
set	smd								

"" showcmd							" show cmd
set	sc								

"" nocompatible						" don't try to be vi compliant								
"set nocompatible

"filetype off						" Help force plugins to load correctly when tunred back on

""" IDK
"" autochdir						" Change to current working dir and delete buffers when closed
set acd
"set background="dark"				" "dark", "light"
set bg=dark
"" binary							" viewing binaries
"set bin
"set 								" 
"set 								" 
"set 								" 
"set 								" 
"set 								" 

""" Backup
""  backup							" backups file before writing
set bk

" backupcopy						" when writing and making backup, how its done, "yes", "no", "auto"
set bkc=auto

"" backupdir						" backup directory
set bdir=~/.vim/backup/

"" backupext={file}					" string appended to file
"set bex={file}

"" backupskip						" if file matches list of file patterns,
									" no backup is made
"set bsk=

""" Tabs and Spacing
"" tabstop							" Number of spaces a tab counts for
set ts=4							

"" smartab							" When on, tab inserts blanks based on shiftwidth,
set sta								" tabstop, or softtabstop. BKSP will
									" delete a shiftwidth worth of space
									" When off, tab inserts blanks based on
									" tabsop or shiftwidth. shiftwidth is only
									" used for shifting text left or right
									" What gets shifted depends on expandtab

"" softtabstop						" Number of spaces tab counts for when
set sts=4							" performing editng options, such as inserting tabs or BKSP
									" Mix of spaces and tabs added.

"" shiftwidth						" Spaces used for each autoindent
set sw=4								
									
"" expandtab						" converts tabs to spaces
"set et

"" noshiftround						" sets shift round off
"set sr

"" textwidth						" maximum width of text inserted
									" longer lines will be broken after
									" whitespace to fit this width. 0 disables
									" this. textwidth is 0 when paste is set
set tw=0


""" Indent
"" autoindent						" copies current indent to next line
set ai								

"" smartindent						" better autoindent
set si								" 

"" smartcase						" Overrides ignorecase if pattern contains
set scs								" upper case letters

" Only on if cindnent is on
"" cindent							" stricter rules for C programs
set cin

"" cinkeys							" keys that cause reindenting of line in insert mode 
"set cink

"" cinoptions						" options for cindent
"set cnio

"" cinwords							" Words start extra indent in next line if smartindent or cident
"set cinw

""" Search
"" incsearch						" searches as char are entered
set is
"" hlsearch							" highlight
set hl
									" turn off search highlighting with <CR> carriage return
nnoremap <CR> :nohlsearch<CR><CR>
"nnoremap / /\v						 
"vnoremap / /\v						
									" figure out difference between these
									" search types
""" Clipboard
" clipboard							" sets clipboard to behave to following ways:
set cb=autoselect
									" unnamed - clipboard register '*' for yank,
									"		   delete, change, and put that
									"		   normally would be placed in
									"		   unnamed
									" unnamedplus - uses register '+' for
									"				everything but yank, which is in '*'
									"			    and '+'
									" autoselect - when in visual mode, vim
									"			   tries to use global
									"			   selection or use register
									"			   '*'
									" autoselectml - autoselect, but for
									" modeless only  
									" html - when clipboard has HTML
									"		 this will be used for pasting,
									"		 marks text as html when copied
									" exclude:{pattern} - pattern that is
									" matched against the terminal, if there's
									" a match, no connection to X server is
									" made				  

""" Cursor
"" scrolloff						" lines loaded before and after cursor i think
set so=5

""" Completion
"" complete							" specifies how ins-completion works for CTRL-P, CTRL-P
set cpt=w,b,u,U,i,d,t				" and whole line CTRL-X, CTRL-L
									" w - scan buffers from other windows
									" b - scan other loaded buffers on that
									"	  buffer list
									" u - scan the unloaded buffers that are
									"	  not in the buffer list
									" U - scan buffers not in buffer list
									" k - scan files given with dictionary
									"	  option
									" kspell - use spell checking
									" k{dict} - scan file {dict}, several k
									"			flags can be given, ex:
									"			set cpt=k/usr/dict/*,k~/spanish
									" s - scan files given with thesaurus
									"	  option
									" i - scan current and included files
									" d - scan current and included files for
									"	  defined name or macro CTRL-X, CTRL-D
									" ] - tag completion
									" t - same as "]"

""" Colors
"" color scheme in ~/.config/colors/
"" vim color scheme in ~/.vim/colors/
""colorscheme "UHHHHH"
